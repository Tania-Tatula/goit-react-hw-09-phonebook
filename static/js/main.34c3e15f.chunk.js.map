{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-reduser.js","components/Loader/Loader.js","routes.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAutenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","logIn","logOut","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactSuccess","addContactsError","addContactRequest","changeFilter","deleteContactSuccess","deleteContactsError","deleteContactRequest","submit","number","item","actions","deleteContact","contactId","delete","then","catch","fetchContacts","getValue","contacts","filter","getVisibleContacts","createSelector","items","filterLowerCase","toLowerCase","includes","map","contact","alert","id","Loader","className","Component","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggeIn","useSelector","authSelectors","to","routes","exact","style","activeStyle","UserMenu","useDispatch","onLogOut","useCallback","authOperations","src","defaultAvatar","alt","width","Button","variant","type","onClick","AuthNav","AppBar","PrivateRoute","component","redirectTo","isAuthenticated","routeProps","render","props","PublicRoute","restricted","HomeView","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReduser","persistReducer","authReducer","devContacts","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.34c3e15f.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAutenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  isAutenticated,\n  error,\n});\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\n      \"https://connections-api.herokuapp.com/users/signup\",\n      credentials\n    );\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\n      \"https://connections-api.herokuapp.com/users/login\",\n      credentials\n    );\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"https://connections-api.herokuapp.com/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\n      \"https://connections-api.herokuapp.com/users/current\"\n    );\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","const getIsAuthenticated = (state) => state.auth.isAutenticated;\n\nconst getUsername = (state) => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\nconst addContactsError = createAction(\"contacts/addContactsError\");\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\n\nconst changeFilter = createAction(\"contacts/filter\");\n\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\n\nexport default {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  changeFilter,\n  addContactRequest,\n  addContactSuccess,\n  addContactsError,\n  deleteContactSuccess,\n  deleteContactsError,\n  deleteContactRequest,\n};\n","import axios from \"axios\";\nimport actions from \"./contacts-actions\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(actions.fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(actions.fetchContactsError(error.message)));\n};\n\nconst submit =\n  ({ name, number }) =>\n  async (dispatch) => {\n    const item = { name, number };\n\n    dispatch(actions.addContactRequest());\n\n    try {\n      const { data } = await axios.post(\"/contacts\", item);\n      dispatch(actions.addContactSuccess(data));\n    } catch (error) {\n      dispatch(actions.addContactsError(error.message));\n    }\n  };\n\nconst deleteContact = (contactId) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\n    .catch((error) => dispatch(actions.deleteContactsError(error.message)));\n};\n\nexport default {\n  submit,\n  deleteContact,\n  fetchContacts,\n};\n","import { createSelector } from \"reselect\";\n\nconst getValue = (state) => state.contacts.filter;\nconst getAllContacts = (state) => state.contacts.items;\n\nconst getVisibleContacts = createSelector(\n  [getValue, getAllContacts],\n  (filter, items) => {\n    const filterLowerCase = filter.toLowerCase();\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filterLowerCase)\n    );\n  }\n);\n\nexport default {\n  getValue,\n  getVisibleContacts,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\n\nconst {\n  fetchContactsSuccess,\n  addContactSuccess,\n  deleteContactSuccess,\n  changeFilter,\n} = actions;\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) =>\n    state.map((contact) => contact.name).includes(payload.name)\n      ? alert(`${payload.name} is already in contacts.`)\n      : [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { Component } from \"react\";\n\nexport default class Loader extends Component {\n  render() {\n    return (\n      <div className=\"preloader\">\n        <div className=\"preloader__row\">\n          <div className=\"preloader__item\"></div>\n          <div className=\"preloader__item\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default {\n  home: \"/\",\n  registerPage: \"/register\",\n  loginPage: \"/login\",\n  contactsPage: \"/contacts\",\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nexport default function Navigation() {\n  const isLoggeIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <nav>\n      <NavLink\n        to={routes.home}\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Главная\n      </NavLink>\n\n      {isLoggeIn && (\n        <NavLink\n          to={routes.contactsPage}\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Заметки\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.png\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  // Якщо залежносты вказаны в масиві зміняться, то тільки тоді елемент перерендериться\n  const onLogOut = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <img src={defaultAvatar} alt=\"\" width=\"32\" className=\"avatar\" />\n      <span className=\"name\">Welcome, {name}</span>\n      <Button variant=\"outline-success\" type=\"button\" onClick={onLogOut}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to={routes.registerPage}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to={routes.loginPage}\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport UserMenu from \"../UserMenu\";\nimport AuthNav from \"../AuthNav\";\nimport { authSelectors } from \"../../redux/auth\";\n\nexport default function AppBar() {\n  const isLoggeIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className=\"Nav\">\n      <Navigation />\n      {isLoggeIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/auth\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nexport default function PrivateRoute({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLoggeIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        isLoggeIn ? <Component {...props} /> : <Redirect to={redirectTo} />\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../../redux/auth\";\nimport { useSelector } from \"react-redux\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) {\n  const isLoggeIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <Route\n      {...routeProps}\n      render={(props) =>\n        isLoggeIn && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useEffect, Suspense, lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Loader from \"./components/Loader\";\nimport AppBar from \"./components/AppBar\";\nimport \"./style.css\";\nimport routes from \"./routes\";\nimport { useDispatch } from \"react-redux\";\nimport { authOperations } from \"./redux/auth\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView\" /*webpackChunkName *home-view**/)\n);\nconst RegisterPage = lazy(() =>\n  import(\"./views/RegisterPage\" /*webpackChunkName *movies-page**/)\n);\nconst LoginPage = lazy(() =>\n  import(\"./views/LoginPage\" /*webpackChunkName *movie-details-page**/)\n);\nconst ContactsPage = lazy(() =>\n  import(\"./views/ContactsPage\" /*webpackChunkName *movie-details-page**/)\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n\n      <Suspense fallback={<Loader />}>\n        <Switch>\n          <PublicRoute exact path={routes.home} component={HomeView} />\n          <PublicRoute\n            exact\n            path={routes.registerPage}\n            restricted\n            redirectTo=\"/contacts\"\n            component={RegisterPage}\n          />\n          <PublicRoute\n            path={routes.loginPage}\n            restricted\n            redirectTo=\"/contacts\"\n            component={LoginPage}\n          />\n          <PrivateRoute\n            path={routes.contactsPage}\n            component={ContactsPage}\n            redirectTo=\"/login\"\n          />\n\n          <Route component={HomeView} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport { contactsReduser } from \"./contacts\";\nimport storage from \"redux-persist/lib/storage\";\nimport { authReducer } from \"./auth\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devContacts: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}