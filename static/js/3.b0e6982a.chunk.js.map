{"version":3,"sources":["../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","icons/delete.svg","components/Contacts/ContactForm.js","components/Contacts/Filter.js","components/Contacts/ContactList.js","views/ContactsPage.js","../node_modules/shortid/lib/alphabet.js","components/Contacts/Contacts.module.css","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js"],"names":["alphabet","require","random","format","module","exports","number","done","loopCounter","str","get","Math","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","push","floor","mask","log","length","LN2","step","id","RegExp","replace","test","_path","_path2","ContactForm","onSubmit","useState","name","setName","setNumber","dispatch","useDispatch","loginInputId","shortid","generate","className","styles","contactsBlock","evt","preventDefault","contactsOperations","submit","formName","input","type","value","onChange","e","target","pattern","title","required","button","Filter","useSelector","contactsSelector","getValue","useCallback","contactsActions","changeFilter","currentTarget","_excluded","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","titleId","props","xmlns","viewBox","ref","d","fill","ForwardRef","ContactList","contactList","getVisibleContacts","onDeleteContact","contactId","deleteContact","map","contactItem","onClick","buttonDelete","width","height","ContactsPages","useEffect","fetchContacts","App","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","splice","shuffle","characters","seed","lookup","index","_slicedToArray","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","err","unsupportedIterableToArray","TypeError","build","isValid","clusterWorkerId","seedValue","worker","workerId","newCharacters","_seed_","counter","previousSeconds","seconds","Date","now"],"mappings":"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","file":"static/js/3.b0e6982a.chunk.js","sourcesContent":["'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\nimport shortid from \"shortid\";\nimport { contactsOperations } from \"../../redux/contacts\";\nimport { useDispatch } from \"react-redux\";\n\nimport styles from \"./Contacts.module.css\";\n\nexport default function ContactForm(onSubmit) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const loginInputId = shortid.generate();\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    dispatch(\n      contactsOperations.submit({ id: shortid.generate(), name, number })\n    );\n    reset();\n  };\n\n  return (\n    <div className={styles.contactsBlock}>\n      <form onSubmit={handleSubmit} className={styles.formName}>\n        <label id={loginInputId}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleNameChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label id={loginInputId}>\n          Number\n          <input\n            className={styles.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleNumberChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={styles.button} type=\"submit\">\n          Add conract\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsActions, contactsSelector } from \"../../redux/contacts\";\n\nimport styles from \"./Contacts.module.css\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelector.getValue);\n  const onChange = useCallback(\n    (evt) => {\n      dispatch(contactsActions.changeFilter(evt.currentTarget.value));\n    },\n    [dispatch]\n  );\n  return (\n    <div className={styles.contactsBlock}>\n      <label>\n        Find contact by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback } from \"react\";\nimport styles from \"./Contacts.module.css\";\nimport { ReactComponent as CloseIcon } from \"../../icons/delete.svg\";\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contactList = useSelector(contactsSelector.getVisibleContacts);\n  const onDeleteContact = useCallback(\n    (contactId) => {\n      dispatch(contactsOperations.deleteContact(contactId));\n    },\n    [dispatch]\n  );\n\n  return (\n    <>\n      <ul className={styles.contactsBlock}>\n        {contactList.map(({ name, number, id }) => (\n          <li className={styles.contactItem} key={id}>\n            {name}: {number}\n            <button\n              onClick={() => onDeleteContact(id)}\n              className={styles.buttonDelete}\n              aria-label=\"Видалити контакт\"\n            >\n              <CloseIcon width=\"20\" height=\"20\" fill=\"#fff\" />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contactList: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport ContactForm from \"../components/Contacts/ContactForm\";\nimport Filter from \"../components/Contacts/Filter\";\nimport ContactList from \"../components/Contacts/ContactList\";\nimport styles from \"../components/Contacts/Contacts.module.css\";\nimport { contactsOperations } from \"../redux/contacts\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function ContactsPages() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.App}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Contacts_App__oZb9h\",\"input\":\"Contacts_input__3djhb\",\"button\":\"Contacts_button__3DkNa\",\"buttonDelete\":\"Contacts_buttonDelete__2udIP\",\"contactsBlock\":\"Contacts_contactsBlock__2EGYc\",\"contactItem\":\"Contacts_contactItem__Eu_rX\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n"],"sourceRoot":""}